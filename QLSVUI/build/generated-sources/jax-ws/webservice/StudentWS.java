
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentWS", targetNamespace = "http://soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentWS {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateStudent", targetNamespace = "http://soap/", className = "webservice.UpdateStudent")
    @ResponseWrapper(localName = "updateStudentResponse", targetNamespace = "http://soap/", className = "webservice.UpdateStudentResponse")
    @Action(input = "http://soap/StudentWS/updateStudentRequest", output = "http://soap/StudentWS/updateStudentResponse")
    public void updateStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteStudent", targetNamespace = "http://soap/", className = "webservice.DeleteStudent")
    @ResponseWrapper(localName = "deleteStudentResponse", targetNamespace = "http://soap/", className = "webservice.DeleteStudentResponse")
    @Action(input = "http://soap/StudentWS/deleteStudentRequest", output = "http://soap/StudentWS/deleteStudentResponse")
    public void deleteStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addStudent", targetNamespace = "http://soap/", className = "webservice.AddStudent")
    @ResponseWrapper(localName = "addStudentResponse", targetNamespace = "http://soap/", className = "webservice.AddStudentResponse")
    @Action(input = "http://soap/StudentWS/addStudentRequest", output = "http://soap/StudentWS/addStudentResponse")
    public void addStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://soap/", className = "webservice.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://soap/", className = "webservice.FindAllResponse")
    @Action(input = "http://soap/StudentWS/findAllRequest", output = "http://soap/StudentWS/findAllResponse")
    public List<Student> findAll();

    /**
     * 
     * @param arg0
     * @return
     *     returns webservice.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudent", targetNamespace = "http://soap/", className = "webservice.FindStudent")
    @ResponseWrapper(localName = "findStudentResponse", targetNamespace = "http://soap/", className = "webservice.FindStudentResponse")
    @Action(input = "http://soap/StudentWS/findStudentRequest", output = "http://soap/StudentWS/findStudentResponse")
    public Student findStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
